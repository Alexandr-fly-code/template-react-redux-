{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aleksandrstupak/react-redux-example/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchData),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchFetch);\n\nimport { call, put, all, takeEvery } from 'redux-saga/effects';\nimport axios from \"axios\";\nimport { getItems } from '../actions/getItemsAction';\nimport { FETCH_REQUEST } from '../constants';\nexport function fetchData() {\n  var data;\n  return _regeneratorRuntime.wrap(function fetchData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(function () {\n            return axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(function (data) {\n              return data.status === 200 ? data.data : [];\n            });\n          });\n\n        case 3:\n          data = _context.sent;\n          _context.next = 6;\n          return put(getItems(data));\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put(function (error) {\n            return console.log(error);\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 8]]);\n}\nexport default function watchFetch() {\n  return _regeneratorRuntime.wrap(function watchFetch$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(FETCH_REQUEST, fetchData);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n} //     try {\n//\n//         const [posts, users, comments] = yield all([\n//             call(() => {\n//                 return axios.get(urlPosts)\n//                     .then(data => data.status === 200 ? data.data : [])\n//\n//             }),\n//             call(() => {\n//                 return axios.get(urlUsers)\n//                     .then(data => data.status === 200 ? data.data : [])\n//\n//             }),\n//             call(() => {\n//                 return axios.get(urlComments)\n//                     .then(data => data.status === 200 ? data.data : [])\n//\n//             }),\n//         ]);\n//         yield put(addPost(posts));\n//         yield put(addUsers(users));\n//         yield put(addComments(comments));\n//\n//     }catch (error) {\n//         yield put(() => {console.log('Getting data from server error: ' + error)})\n//     }\n// }\n//\n//","map":{"version":3,"sources":["/Users/aleksandrstupak/react-redux-example/src/Components/redux/redux-saga/sagas.js"],"names":["fetchData","watchFetch","call","put","all","takeEvery","axios","getItems","FETCH_REQUEST","get","then","data","status","error","console","log"],"mappings":";;;;yBAKiBA,S;;;yBAaQC,U;;AAlBzB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAwBC,SAAxB,QAA0C,oBAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AACA,SAAQC,aAAR,QAA4B,cAA5B;AAEA,OAAO,SAAUR,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAME,IAAI,CAAC,YAAM;AACtB,mBAAOI,KAAK,CAACG,GAAN,+CACFC,IADE,CACG,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsBD,IAAI,CAACA,IAA3B,GAAkC,EAAtC;AAAA,aADP,CAAP;AAEH,WAHkB,CAAV;;AAFd;AAEOA,UAAAA,IAFP;AAAA;AAOC,iBAAMR,GAAG,CAACI,QAAQ,CAACI,IAAD,CAAT,CAAT;;AAPD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASC,iBAAMR,GAAG,CAAC,UAAAU,KAAK;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,WAAN,CAAT;;AATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaP,eAAe,SAAUZ,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMI,SAAS,CAACG,aAAD,EAAgBR,SAAhB,CAAf;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAKf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { call, put, all,takeEvery, } from 'redux-saga/effects';\nimport axios from \"axios\";\nimport {getItems} from '../actions/getItemsAction';\nimport {FETCH_REQUEST} from '../constants';\n\nexport function* fetchData() {\n    try {\n        const data = yield call(() => {\n                return axios.get(`https://jsonplaceholder.typicode.com/posts`)\n                    .then(data => data.status === 200 ? data.data : [])\n            }\n        );\n        yield put(getItems(data));\n    } catch (error) {\n        yield put(error => console.log(error));\n    }\n}\n\nexport default function* watchFetch() {\n    yield takeEvery(FETCH_REQUEST, fetchData);\n}\n\n\n//     try {\n//\n//         const [posts, users, comments] = yield all([\n//             call(() => {\n//                 return axios.get(urlPosts)\n//                     .then(data => data.status === 200 ? data.data : [])\n//\n//             }),\n//             call(() => {\n//                 return axios.get(urlUsers)\n//                     .then(data => data.status === 200 ? data.data : [])\n//\n//             }),\n//             call(() => {\n//                 return axios.get(urlComments)\n//                     .then(data => data.status === 200 ? data.data : [])\n//\n//             }),\n//         ]);\n//         yield put(addPost(posts));\n//         yield put(addUsers(users));\n//         yield put(addComments(comments));\n//\n//     }catch (error) {\n//         yield put(() => {console.log('Getting data from server error: ' + error)})\n//     }\n// }\n//\n//"]},"metadata":{},"sourceType":"module"}