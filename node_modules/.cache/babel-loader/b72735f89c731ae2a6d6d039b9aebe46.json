{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers';\nimport { createBrowserHistory } from 'history';\nimport { connectRouter } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../redux-saga/sagas';\nimport { composeWithDevTools } from 'red'; // const DevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nexport var history = createBrowserHistory();\nvar sagaMiddleware = createSagaMiddleware();\nvar store = createStore(connectRouter(history)(rootReducer), DevTools, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/Users/aleksandrstupak/react-redux-example/src/Components/redux/store/store.js"],"names":["createStore","applyMiddleware","rootReducer","createBrowserHistory","connectRouter","createSagaMiddleware","rootSaga","composeWithDevTools","history","sagaMiddleware","store","DevTools","run"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAAQC,oBAAR,QAAmC,SAAnC;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,mBAAT,QAAoC,KAApC,C,CAEA;;AACA,OAAO,IAAMC,OAAO,GAAGL,oBAAoB,EAApC;AAEP,IAAMM,cAAc,GAAGJ,oBAAoB,EAA3C;AAGA,IAAMK,KAAK,GAAGV,WAAW,CAACI,aAAa,CAACI,OAAD,CAAb,CAAuBN,WAAvB,CAAD,EAAsCS,QAAtC,EAAgDV,eAAe,CAACQ,cAAD,CAA/D,CAAzB;AACAA,cAAc,CAACG,GAAf,CAAmBN,QAAnB;AACA,eAAeI,KAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from '../reducers';\nimport {createBrowserHistory} from 'history';\nimport {connectRouter} from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../redux-saga/sagas';\nimport { composeWithDevTools } from 'red';\n\n// const DevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nexport const history = createBrowserHistory();\n\nconst sagaMiddleware = createSagaMiddleware();\n\n\nconst store = createStore(connectRouter(history)(rootReducer), DevTools, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nexport default store;"]},"metadata":{},"sourceType":"module"}